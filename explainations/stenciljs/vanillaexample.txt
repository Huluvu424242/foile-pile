<?xml version="1.0"?>
<speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="de-DE">
Pure Javascript Implementierung

Möchte man eine Webkomponente ohne Nutzung von <lang xml:lang="en-US">Frameworks</lang> erstellen,
so ist dies möglich unterliegt aber Einschränkungen.
Der komplette Kode und damit meine ich Javascript, <say-as interpret-as="characters">CSS</say-as> und <say-as interpret-as="characters">HTML</say-as> muss leider in einer gemeinsamen Datei untergebracht werden.
Möchte man diese drei Teile in unterschiedliche Dateien aufteilen, benötigt man sofort einen <lang xml:lang="en-US">bundler</lang> wie <lang xml:lang="en-US">webpack</lang>.
Dies sind leider die Folgen der Entscheidung die Spezifikation <say-as interpret-as="characters">HTML</say-as> Importe zu verwerfen.

Die Folie zeigt die wichtigsten Schritte und ein Kodebeispiel zur Erstellung einer puren Webkomponente in <say-as interpret-as="characters">ES6</say-as>.

Im Wesentlichen ist eine Klasse von einem nativen <say-as interpret-as="characters">HTML</say-as> Element abzuleiten,
ein <say-as interpret-as="characters">HTML</say-as> <lang xml:lang="en-US">Template</lang> zu definieren,
ein Shadow Root zu erzeugen und das Template einzufügen und die Webkomponente beim Browser zu registrieren.

Anschließend kann diese im HTML referenziert und benutzt werden.

</speak>
